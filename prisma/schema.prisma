// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id                 String              @id @default(cuid())
    createdAt          DateTime            @default(now())
    updatedAt          DateTime            @updatedAt
    emailVerified      Boolean             @default(false)
    role               Role                @default(USER)
    email              String              @unique
    username           String              @unique
    password           String
    salt               String
    Calendar           Calendar[]
    profile            Profile?
    VerificationSecret VerificationSecret?
}

model Profile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    String   @unique
}

model VerificationSecret {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    secret    String   @unique
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    String   @unique
}

enum Role {
    USER
    ADMIN
}

enum Color {
    RED
    ORANGE
    YELLOW
    GREEN
    BLUE
    INDIGO
    VIOLET
}

model Calendar {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    owner     User     @relation(fields: [ownerId], references: [id])
    ownerId   String
    events    Event[]
    color     Color    @default(BLUE)
}

model Event {
    id         String   @id @default(cuid())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    name       String
    start      DateTime
    end        DateTime
    calendar   Calendar @relation(fields: [calendarId], references: [id])
    calendarId String
    color      Color    @default(BLUE)
}
